version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: dietreino-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - dietreino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dietreino-api
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DB_USERNAME}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3000
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - dietreino-network
    command: npm run start:dev
    restart: unless-stopped

    # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: dietreino-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dietreino-network
    restart: unless-stopped

networks:
  dietreino-network:
    driver: bridge

volumes:
  postgres_data: